#!/bin/sh
# postrm script for browser-switchboard
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

kill_old_proxies() {
	# This would be so much nicer with pgrep/pkill ...
	proxy_pids=`busybox ps | fgrep "python /usr/bin/browser-switchboard" | fgrep -v grep | awk '{ print $1 }'`
	if [ ! -z "$proxy_pids" ]; then
		kill $proxy_pids
	fi
}

case "$1" in
    remove)
	dpkg-divert --remove --package browser-switchboard --rename \
	    --divert /usr/bin/browser.tablet-browser-ui \
	    /usr/bin/browser
	dpkg-divert --remove --package browser-switchboard --rename \
	    --divert /usr/share/dbus-1/services/com.nokia.osso_browser.tablet-browser-ui \
	    /usr/share/dbus-1/services/com.nokia.osso_browser.service
	# Try to make dbus-daemon pick up the change in services file
	kill -HUP `pidof dbus-daemon`

	# Kill off any running browser-switchboard to make sure that the
	# default browser gets launched
	kill_old_proxies
	;;
    upgrade|disappear)
	# Kill off any running browser-switchboard to make sure that the new
	# version gets launched the next time a D-Bus request is made
	kill_old_proxies
	;;
    purge|failed-upgrade|abort-install|abort-upgrade)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


